// Objective-C API for talking to go-defi-sdk/core/crossswap/execution Go package.
//   gobind -lang=objc go-defi-sdk/core/crossswap/execution
//
// File is generated by gobind. Do not edit.

#ifndef __Execution_H__
#define __Execution_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Types.objc.h"
#include "Util.objc.h"
#include "Service.objc.h"

@class ExecutionCCSwapSetting;
@class ExecutionExecution;
@class ExecutionExecutionSetting;
@class ExecutionStatusManager;
@class ExecutionStatusParams;
@class ExecutionStepWithStatus;
@class ExecutionStepsStatusData;
@protocol ExecutionExecutionCallback;
@class ExecutionExecutionCallback;
@protocol ExecutionWalletAccount;
@class ExecutionWalletAccount;

@protocol ExecutionExecutionCallback <NSObject>
- (void)onStepStatusUpdate:(ExecutionStepsStatusData* _Nullable)p0;
- (id<ExecutionWalletAccount> _Nullable)onSwitchChain:(NSString* _Nullable)chainType chainId:(long)chainId chainName:(NSString* _Nullable)chainName error:(NSError* _Nullable* _Nullable)error;
@end

@protocol ExecutionWalletAccount <NSObject>
- (long)getChainId;
- (NSString* _Nonnull)getChainName;
- (NSString* _Nonnull)getChainType;
- (NSString* _Nonnull)getUseableBalance:(NSString* _Nullable)account error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)polkaGetMetadataString:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signAndSend:(NSString* _Nullable)hexData error:(NSError* _Nullable* _Nullable)error;
@end

@interface ExecutionCCSwapSetting : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long statusQueryIntervalSecond;
@end

@interface ExecutionExecution : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewExecution create exection environment
 */
- (nullable instancetype)init:(TypesQuoteRes* _Nullable)quote setting:(ExecutionExecutionSetting* _Nullable)setting;
/**
 * Execute execute all steps, this will block long time
when one step error, excution will be stopped
 */
- (BOOL)execute:(NSError* _Nullable* _Nullable)error;
/**
 * Resume the stopped or failed execution
execution will continue at where stopped (or where failed)
 */
- (BOOL)resume:(NSError* _Nullable* _Nullable)error;
/**
 * Stop the execution and return util.ErrExecutionStopped
step.StatusParams.Error is util.ErrExecutionStopped, but step.status not change to fail
 */
- (void)stop;
@end

@interface ExecutionExecutionSetting : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) id<ExecutionExecutionCallback> _Nullable callback;
@property (nonatomic) BOOL isTransferAll;
@property (nonatomic) long customId;
@property (nonatomic) ExecutionCCSwapSetting* _Nullable ccSwapSetting;
@end

@interface ExecutionStatusManager : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) id<ExecutionExecutionCallback> _Nullable callback;
@property (nonatomic) long customId;
// skipped field StatusManager.Steps with unsupported type: []*go-defi-sdk/core/crossswap/execution.StepWithStatus

@end

@interface ExecutionStatusParams : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSError* _Nullable err;
@property (nonatomic) NSString* _Nonnull txHash;
@property (nonatomic) TypesStatusRes* _Nullable statusRes;
@end

@interface ExecutionStepWithStatus : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) TypesStep* _Nullable step;
@property (nonatomic) NSString* _Nonnull status;
@property (nonatomic) ExecutionStatusParams* _Nullable statusParams;
@end

@interface ExecutionStepsStatusData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
// skipped field StepsStatusData.Steps with unsupported type: []*go-defi-sdk/core/crossswap/execution.StepWithStatus

@property (nonatomic) long customId;
- (ExecutionStepWithStatus* _Nullable)index:(long)i;
- (long)size;
@end

/**
 * NewExecution create exection environment
 */
FOUNDATION_EXPORT ExecutionExecution* _Nullable ExecutionNewExecution(TypesQuoteRes* _Nullable quote, ExecutionExecutionSetting* _Nullable setting, NSError* _Nullable* _Nullable error);

@class ExecutionExecutionCallback;

@class ExecutionWalletAccount;

/**
 * StepStatusUpdateHook hook will be call when steps status changed
when the last step is success, the Execution is success
 */
@interface ExecutionExecutionCallback : NSObject <goSeqRefInterface, ExecutionExecutionCallback> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onStepStatusUpdate:(ExecutionStepsStatusData* _Nullable)p0;
- (id<ExecutionWalletAccount> _Nullable)onSwitchChain:(NSString* _Nullable)chainType chainId:(long)chainId chainName:(NSString* _Nullable)chainName error:(NSError* _Nullable* _Nullable)error;
@end

@interface ExecutionWalletAccount : NSObject <goSeqRefInterface, ExecutionWalletAccount> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (long)getChainId;
- (NSString* _Nonnull)getChainName;
- (NSString* _Nonnull)getChainType;
- (NSString* _Nonnull)getUseableBalance:(NSString* _Nullable)account error:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)polkaGetMetadataString:(NSError* _Nullable* _Nullable)error;
- (NSString* _Nonnull)signAndSend:(NSString* _Nullable)hexData error:(NSError* _Nullable* _Nullable)error;
@end

#endif
